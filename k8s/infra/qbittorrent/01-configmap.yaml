apiVersion: v1
kind: ConfigMap
metadata:
  name: qbittorrent-config
  namespace: infra
data:
  # qBittorrent configuration to bind to VPN interface only for torrents
  qBittorrent.conf: |
    [BitTorrent]
    Session\Interface=tailscale0
    Session\InterfaceName=tailscale0
    Session\Port=6881
    
    [Preferences]
    Connection\PortRangeMin=6881
    Connection\UPnP=false
    Connection\RandomPort=false
    Connection\InterfaceAddress=0.0.0.0
    Connection\InterfaceName=tailscale0
    # Web UI should bind to all interfaces for cluster access
    WebUI\Address=*
    WebUI\Port=8080
    
    # Security settings
    Advanced\AnonymousMode=true
    Advanced\IncludeOverhead=true
    General\UseRandomPort=false
    
  # Health check script for VPN connectivity
  check-vpn.sh: |
    #!/bin/bash
    set -e
    
    # Check if Tailscale interface exists
    if ! ip link show tailscale0 >/dev/null 2>&1; then
      echo "ERROR: VPN interface tailscale0 not found"
      exit 1
    fi
    
    # Check if we can reach the internet through VPN
    if ! curl -s --max-time 10 --interface tailscale0 https://ipinfo.io/ip >/dev/null; then
      echo "ERROR: Cannot reach internet through VPN"
      exit 1
    fi
    
    echo "VPN connectivity OK"
    exit 0

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: tailscale-config
  namespace: infra
data:
  # Tailscale startup script with exit node configuration
  start-tailscale.sh: |
    #!/bin/bash
    set -e
    
    echo "Starting Tailscale daemon..."
    tailscaled --state=/var/lib/tailscale/tailscaled.state --socket=/var/run/tailscale/tailscaled.sock &
    
    # Wait for daemon to start
    sleep 5
    
    echo "Connecting to Tailscale with exit node..."
    tailscale up \
      --auth-key="${TS_AUTHKEY}" \
      --exit-node="${TS_EXIT_NODE}" \
      --exit-node-allow-lan-access=true \
      --accept-routes=false \
      --advertise-routes="" \
      --hostname=qbittorrent-vpn \
      --shields-up=true
    
    echo "Tailscale connected successfully"
    
    # Monitor connection and restart if needed
    while true; do
      if ! tailscale status >/dev/null 2>&1; then
        echo "Tailscale connection lost, restarting..."
        tailscale up \
          --auth-key="${TS_AUTHKEY}" \
          --exit-node="${TS_EXIT_NODE}" \
          --exit-node-allow-lan-access=true \
          --accept-routes=false \
          --advertise-routes="" \
          --hostname=qbittorrent-vpn \
          --shields-up=true
      fi
      sleep 30
    done
    
  # IP leak detection script
  check-ip-leak.sh: |
    #!/bin/bash
    set -e
    
    # Get IP through VPN interface
    VPN_IP=$(curl -s --max-time 10 --interface tailscale0 https://ipinfo.io/ip || echo "FAILED")
    
    # Get default IP (should fail if properly configured)
    DEFAULT_IP=$(curl -s --max-time 10 https://ipinfo.io/ip 2>/dev/null || echo "BLOCKED")
    
    echo "VPN IP: $VPN_IP"
    echo "Default IP: $DEFAULT_IP"
    
    if [[ "$DEFAULT_IP" != "BLOCKED" ]]; then
      echo "WARNING: IP leak detected! Default interface can reach internet"
      exit 1
    fi
    
    if [[ "$VPN_IP" == "FAILED" ]]; then
      echo "ERROR: Cannot get IP through VPN"
      exit 1
    fi
    
    echo "No IP leak detected - all traffic through VPN"
    exit 0