apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: qbittorrent-network-policy
  namespace: infra
spec:
  podSelector:
    matchLabels:
      app: qbittorrent
  policyTypes:
  - Ingress
  - Egress
  
  # Ingress rules - what can connect TO qBittorrent
  ingress:
  # Allow Sonarr to connect to qBittorrent web UI
  - from:
    - podSelector:
        matchLabels:
          app: sonarr
    ports:
    - protocol: TCP
      port: 8080
  
  # Allow external access to web UI via LoadBalancer
  - from: []
    ports:
    - protocol: TCP
      port: 8080
  
  # Egress rules - what qBittorrent can connect TO
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  
  # Allow HTTPS for web access (configuration, updates, etc.)
  - to: []
    ports:
    - protocol: TCP
      port: 443
  
  # Allow HTTP for potential redirects or non-HTTPS access
  - to: []
    ports:
    - protocol: TCP
      port: 80
  
  # Allow Tailscale control plane communication
  - to: []
    ports:
    - protocol: TCP
      port: 443
    - protocol: UDP
      port: 3478
    - protocol: UDP
      port: 41641
  
  # Allow all traffic through VPN interface (this is handled at container level)
  # The container binding ensures only VPN traffic is allowed
  - to: []
    ports:
    - protocol: TCP
      port: 1-65535
    - protocol: UDP 
      port: 1-65535

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: sonarr-to-qbittorrent-policy
  namespace: infra
spec:
  podSelector:
    matchLabels:
      app: sonarr
  policyTypes:
  - Egress
  
  egress:
  # Allow Sonarr to connect to qBittorrent
  - to:
    - podSelector:
        matchLabels:
          app: qbittorrent
    ports:
    - protocol: TCP
      port: 8080
  
  # Allow Sonarr to access external services (metadata, indexers, etc.)
  - to: []
    ports:
    - protocol: TCP
      port: 80
    - protocol: TCP
      port: 443
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53

---
# Default deny policy for the namespace (optional - for enhanced security)
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny-all
  namespace: infra
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  # No rules means deny all by default
  # Other policies will add specific allow rules

---
# Allow internal cluster communication for essential services
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-cluster-services
  namespace: infra
spec:
  podSelector: {}
  policyTypes:
  - Egress
  
  egress:
  # Allow DNS resolution to kube-system
  - to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  
  # Allow access to Kubernetes API server
  - to: []
    ports:
    - protocol: TCP
      port: 443
      
  # Allow internal cluster networking
  - to:
    - namespaceSelector: {}
    ports:
    - protocol: TCP
      port: 1-65535